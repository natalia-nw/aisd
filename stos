from typing import Any


class LinkedList:
    value: Any
    next: 'Node'


class Stack:
    _storage: LinkedList

    def __init__(self) -> None:
        self._storage = None

    def push(self, element: Any) -> None:
        nowy = LinkedList()
        nowy.next = self._storage
        nowy.value = element
        self._storage = nowy

    def pop(self) -> Any:
        nowy = self._storage
        self._storage = self._storage.next
        return nowy.value

    def __str__(self) -> str:
        nowa = self._storage
        stos = ''
        while nowa != None:
            stos = stos + str(nowa.value) + '\n'
            nowa = nowa.next
        return stos

    def __len__(self) -> int:
        nowa = self._storage
        licznik = 0
        while True:
            if nowa == None:
                return licznik
            nowa = nowa.next
            licznik += 1


stack = Stack()
assert len(stack) == 0

stack.push(3)
stack.push(10)
stack.push(1)

assert len(stack) == 3
print(stack)
top_value = stack.pop()

assert top_value == 1
assert len(stack) == 2
print(stack)
